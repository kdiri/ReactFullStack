{"version":3,"sources":["store/actions/action_types.js","store/actions/actions.js","containers/container1.js","containers/header.js","utils/history.js","containers/profile.js","containers/form1.js","containers/renderlist.js","functional/component1.js","functional/callback.js","functional/privatecomponent.js","functional/unauthredirect.js","functional/home.js","functional/renderlistitem.js","functional/signup.js","Blog/posts.js","Blog/addpost.js","Blog/showpost.js","Blog/editpost.js","Profile/showuser.js","Profile/sendmessage.js","Profile/showmessages.js","Profile/replytomessage.js","utils/authcheck.js","routes.js","utils/auth.js","App.js","store/reducers/reducer1.js","store/reducers/auth_reducer.js","store/reducers/user_reducer.js","store/reducers/posts_reducer.js","store/reducers/index.js","index.js"],"names":["REMOVE_OTHER_USER_DB_POSTS","SET_OTHER_USER_DB_PROFILE","REMOVE_OTHER_USER_DB_PROFILE","FETCH_OTHER_USER_DB_POSTS_SUCCESS","SET_USER_MESSAGES","REMOVE_USER_MESSAGES","SUCCESS","type","FAILURE","success","failure","user_input","text","payload","login_success","login_failure","add_profile","profile","remove_profile","set_db_profile","remove_db_profile","fetch_db_posts","posts","fetch_post_comments","comments","fetch_user_posts","fetch_search_posts","remove_search_posts","Container1","_this","this","react_default","a","createElement","onClick","console","log","props","stateprop1","action1","action2","action_creator1","action_creator2","user_text","Component","connect","state","reducer1","user_reducer","dispatch","ACTIONS","Header","Link","to","style","padding","is_authenticated","auth","logout","login","auth_reducer","createHistory","Profile","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClickOpen","pid","setState","open","post_id","handleClickClose","RenderProfile","nickname","src","picture","alt","email","name","email_verified","RenderPosts","post","Card_default","width","height","marginBottom","paddingBottom","CardHeader_default","title","pathname","subheader","className","date_created","CardContent_default","overflow","body","DeltePost","axios","delete","data","then","res","catch","err","setTimeout","history","replace","_this2","user_id","db_profile","uid","get","params","set_user_posts","_this3","Button_default","variant","color","user_posts","map","key","Dialog_default","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","DialogActions_default","posts_reducer","Form1","value","handleChange","event","target","handleSubmit","preventDefault","input_action_creator","onSubmit","onChange","RenderList","items","num","bool","list_item","marginTop","Component1","Callback","PrivateComponent","UnauthRedirect","Home","RenderListItem","location","SignUp","size","Posts","animate_search_posts","posts_search_motion","i","posts_search","concat","toConsumableArray","add_search_posts_to_state","handleSearch","search_query","search_posts_success","db_search_posts","error","handleTransition","opacity","add_posts_to_state","num_posts","length","page_range","slice_posts","animate_posts","indexOfLastPost","activePage","posts_per_page","indexOfFirstPost","posts_slice","slice","posts_motion","handlePageChange","pageNumber","moment","format","paddingLeft","textDecoration","author","likes","set_posts","transition","TextField_default","label","margin","Pagination_default","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","AddPost","username","response","multiline","rowsMax","ShowPost","setCurUserID","isAuthenticated","cur_user_id","add_comments_to_state","comments_arr","animate_comments","comment","comments_motion","handleCommentSubmit","submitted_comment","handleCommentUpdate","commentIndex","findIndex","com","cid","newArr","handleCommentDelete","delete_comment_id","filter","RenderComments","isEdited","handleCommentChange","window","scroll","top","left","behavior","handleUpdate","edited_comment","put","handleDelete","handleLikes","like_user_ids","includes","like_post","like_user_id","set_comments","cursor","EditPost","handleTitleChange","handleBodyChange","rows","goBack","ShowUser","set_profile","set_db_posts","scrollTo","user_profile","OtherUserDBProfile","db_other_user_posts","ACTION_TYPES","SendMessage","message_to_username","message_sender","message_to","ShowMessages","RenderMessages","TableRow_default","TableCell_default","message","message_title","message_body","DeleteMessage","mid","set_user_messages","Table_default","TableHead_default","TableBody_default","user_messages","UserMessages","messages","ReplytoMessage","AuthCheck","send_profile_to_db","userProfile","auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","authorize","handleAuth","parseHash","authResult","localStorage","setItem","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","getProfile","getAccessToken","getItem","client","userInfo","removeItem","parse","PrivateRoute","_ref","component","Route","render","assign","Redirect","Routes","Router","header","Switch","exact","path","container1","authcheck","routes_PrivateRoute","signup","hash","handleAuthentication","callback","component1","App","create","baseURL","hello","asyncFunction","_callee","regenerator_default","wrap","_context","prev","next","fetch","json","stop","routes","initialState","Reducer1","arguments","undefined","objectSpread","AuthReducer","action","UserReducer","PostsReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7c8d6c66.chunk.js","sourcesContent":["export const SUCCESS = \"SUCCESS\"\r\n\r\nexport const FAILURE = \"FAILURE\"\r\n\r\nexport const USER_INPUT = \"USER_INPUT\"\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\n\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\"\r\n\r\nexport const ADD_PROFILE = \"ADD_PROFILE\"\r\n\r\nexport const REMOVE_PROFILE = \"REMOVE_PROFILE\"\r\n\r\nexport const SET_DB_PROFILE = \"SET_DB_PROFILE\"\r\n\r\nexport const REMOVE_DB_PROFILE = \"REMOVE_DB_PROFILE\"\r\n\r\nexport const FETCH_DB_POSTS = \"FETCH_DB_POSTS\"\r\n\r\nexport const REMOVE_DB_POSTS = \"REMOVE_DB_POSTS\"\r\n\r\nexport const FETCH_POST_COMMENTS = \"FETCH_POST_COMMENTS\"\r\n\r\nexport const REMOVE_POST_COMMENTS = \"REMOVE_POST_COMMENTS\"\r\n\r\nexport const FETCH_USER_POSTS = \"FETCH_USER_POSTS\"\r\n\r\nexport const REMOVE_USER_POSTS = \"REMOVE_USER_POSTS\"\r\n\r\nexport const SEARCH_POSTS_SUCCESS = \"SEARCH_POSTS_SUCCESS\"\r\n\r\nexport const SEARCH_POSTS_FAILURE = \"SEARCH_POSTS_FAILURE\"\r\n\r\nexport const REMOVE_OTHER_USER_DB_POSTS = 'REMOVE_OTHER_USER_DB_POSTS'\r\n\r\nexport const SET_OTHER_USER_DB_PROFILE = 'SET_OTHER_USER_DB_PROFILE'\r\n\r\nexport const REMOVE_OTHER_USER_DB_PROFILE = 'REMOVE_OTHER_USER_DB_PROFILE'\r\n\r\nexport const FETCH_OTHER_USER_DB_POSTS_SUCCESS = 'FETCH_OTHER_USER_DB_POSTS_SUCCESS'\r\n\r\nexport const SET_USER_MESSAGES = 'SET_USER_MESSAGES'\r\n\r\nexport const REMOVE_USER_MESSAGES = 'REMOVE_USER_MESSAGES'\r\n","import * as ACTION_TYPES from './action_types'\r\n\r\nexport const SUCCESS = {\r\n  type: ACTION_TYPES.SUCCESS\r\n}\r\n\r\nexport const FAILURE = {\r\n  type: ACTION_TYPES.FAILURE\r\n}\r\n\r\n\r\nexport const success = () => {\r\n  return {\r\n    type: ACTION_TYPES.SUCCESS\r\n  }\r\n}\r\n\r\nexport const failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.FAILURE\r\n  }\r\n}\r\n\r\nexport const user_input = (text) => {\r\n  return {\r\n    type: ACTION_TYPES.USER_INPUT,\r\n    payload: text\r\n  }\r\n}\r\n\r\n\r\nexport const login_success = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_SUCCESS\r\n  }\r\n}\r\n\r\nexport const login_failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_FAILURE\r\n  }\r\n}\r\n\r\n\r\nexport const add_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.ADD_PROFILE,\r\n    payload: profile\r\n  }\r\n}\r\n\r\nexport const remove_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_PROFILE\r\n  }\r\n}\r\n\r\n\r\nexport const set_db_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_DB_PROFILE,\r\n    payload: profile\r\n  }\r\n}\r\n\r\nexport const remove_db_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_PROFILE\r\n  }\r\n}\r\n\r\nexport const fetch_db_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DB_POSTS,\r\n    payload: posts\r\n  }\r\n}\r\n\r\nexport const remove_db_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_POSTS\r\n  }\r\n}\r\n\r\n\r\nexport const fetch_post_comments = (comments) => {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_POST_COMMENTS,\r\n    payload: comments\r\n  }\r\n}\r\n\r\nexport const remove_post_comments = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_POST_COMMENTS\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const fetch_user_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_USER_POSTS,\r\n    payload: posts\r\n  }\r\n}\r\n\r\nexport const remove_user_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_USER_POSTS\r\n  }\r\n}\r\n\r\nexport const fetch_search_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.SEARCH_POSTS_SUCCESS,\r\n    payload: posts\r\n  }\r\n}\r\n\r\nexport const remove_search_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.SEARCH_POSTS_FAILURE\r\n  }\r\n}\r\n\r\n\r\n//Get posts from the db based on user id of another user\r\nexport function get_other_user_db_posts(posts) {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_OTHER_USER_DB_POSTS_SUCCESS,\r\n    payload: posts\r\n  }\r\n}\r\n\r\nexport function remove_other_user_db_posts() {\r\n  return {\r\n      type: ACTION_TYPES.REMOVE_OTHER_USER_DB_POSTS\r\n  }\r\n}\r\n\r\n\r\n//Actions for rendering profile info of another user\r\nexport function set_other_user_db_profile(profile) {\r\n  return {\r\n    type: ACTION_TYPES.SET_OTHER_USER_DB_PROFILE,\r\n    payload: profile\r\n  }\r\n}\r\n\r\nexport function remove_other_user_db_profile() {\r\n  return {\r\n      type: ACTION_TYPES.REMOVE_OTHER_USER_DB_PROFILE\r\n  }\r\n}\r\n\r\n\r\n//Actions for setting users messages\r\nexport function set_user_messages(messages) {\r\n  return {\r\n    type: ACTION_TYPES.SET_USER_MESSAGES,\r\n    payload: messages\r\n  }\r\n}\r\n\r\nexport function remove_user_messages() {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_USER_MESSAGES\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass Container1 extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={() => console.log(this.props.stateprop1)}> Get State </button>\r\n        <button onClick={() => this.props.action1()}> Dispatch Action 1 </button>\r\n        <button onClick={() => this.props.action2()}>Dispatch Action 2 </button>\r\n        <button onClick={() => this.props.action_creator1()}>Dispatch Action Creator 1 </button>\r\n        <button onClick={() => this.props.action_creator2()}>Dispatch Action Creator 2 </button>\r\n        {this.props.user_text\r\n          ? <h3> {this.props.user_text} </h3>\r\n          : <h3> No User Text </h3>\r\n        }\r\n        <br />\r\n        {this.props.stateprop1\r\n          ? <p> stateprop1 is true </p>\r\n          : <p> stateprop1 is false </p>\r\n        }\r\n      </div>\r\n    )}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    stateprop1: state.reducer1.stateprop1,\r\n    user_text: state.user_reducer.user_text\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    action1: () => dispatch(ACTIONS.SUCCESS),\r\n    action2: () => dispatch(ACTIONS.FAILURE),\r\n    action_creator1: () => dispatch(ACTIONS.success()),\r\n    action_creator2: () => dispatch(ACTIONS.failure())\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Container1);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n  render() {\r\n    return(\r\n        <div>\r\n          <Link to='/' style={{padding: '5px'}}>\r\n            Home\r\n          </Link>\r\n          <Link to='/profile' style={{padding: '5px'}}>\r\n            Profile\r\n          </Link>\r\n          <Link to='/component1' style={{padding: '5px'}}>\r\n            Component 1\r\n          </Link>\r\n          <Link to='/form1' style={{padding: '5px'}}>\r\n            Form 1\r\n          </Link>\r\n          <Link to='/renderlist' style={{padding: '5px'}}>\r\n             List\r\n          </Link>\r\n          <Link to='/posts' style={{padding: '5px'}}>\r\n             Forum\r\n          </Link>\r\n          <Link to='/privateroute' style={{padding: '5px'}}>\r\n            Private Route\r\n          </Link>\r\n          {!this.props.is_authenticated\r\n            ? <button onClick={() => this.props.auth.login()}>Login</button>\r\n            : <button onClick={() => this.props.auth.logout()}>Logout</button>\r\n          }\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </div>\r\n    )}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    is_authenticated: state.auth_reducer.is_authenticated\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import createHistory from 'history/createBrowserHistory'\r\n\r\nexport default createHistory()\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport { Link } from 'react-router-dom';\r\nimport history from '../utils/history';\r\nimport axios from 'axios';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '../App.css'\r\n\r\n\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      post_id: null\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    const user_id = this.props.db_profile[0].uid\r\n    axios.get('/api/get/userposts', {params: { user_id: user_id}})\r\n      .then((res) => this.props.set_user_posts(res.data))\r\n      .catch((err) => console.log(err))\r\n\r\n  }\r\n\r\n\r\n  handleClickOpen = (pid) => {\r\n    this.setState({open: true, post_id: pid })\r\n  }\r\n\r\n  handleClickClose = () => {\r\n    this.setState({open: false, post_id: null })\r\n  }\r\n\r\n\r\n  RenderProfile = (props) => (\r\n    <div>\r\n      <h1>{props.profile.profile.nickname}</h1>\r\n      <br />\r\n      <img src={props.profile.profile.picture} alt=\"\" />\r\n      <br />\r\n      <h4> {props.profile.profile.email}</h4>\r\n      <br />\r\n      <h5> {props.profile.profile.name} </h5>\r\n      <br />\r\n      <h6> Email Verified: </h6>\r\n      {props.profile.profile.email_verified ? <p>Yes</p> : <p>No</p> }\r\n      <br />\r\n    </div>\r\n  )\r\n\r\n  RenderPosts = post => (\r\n    <Card style={{width: '500px', height: '200px', marginBottom: '10px', paddingBottom: '80px' }}>\r\n      <CardHeader\r\n        title={<Link to={{pathname:'/post/' + post.post.pid, state: {post}}}>\r\n                  {post.post.title}\r\n                </Link> }\r\n        subheader={\r\n            <div className=\"FlexColumn\">\r\n              <div className=\"FlexRow\">\r\n                {post.post.date_created}\r\n              </div>\r\n              <div className=\"FlexRow\">\r\n                <Link to={{pathname:'/editpost/' + post.post.pid, state:{post} }}>\r\n                  <button>\r\n                   Edit\r\n                  </button>\r\n                </Link>\r\n                <button onClick={() => this.handleClickOpen(post.post.pid) }>\r\n                 Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            }\r\n          />\r\n      <br />\r\n      <CardContent>\r\n        <span style={{overflow: 'hidden' }}> {post.post.body} </span>\r\n      </CardContent>\r\n\r\n    </Card>\r\n  );\r\n\r\n  DeltePost = () => {\r\n    const post_id = this.state.post_id\r\n    axios.delete('api/delete/postcomments', {data: { post_id: post_id }} )\r\n      .then(() => axios.delete('/api/delete/post', {data: { post_id: post_id }} )\r\n          .then(res => console.log(res) ) )\r\n      .catch(err => console.log(err))\r\n      .then(() => this.handleClickClose())\r\n      .then(() => setTimeout(() => history.replace('/'), 700 ) )\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div>\r\n          <this.RenderProfile profile={this.props.profile} />\r\n\r\n        </div>\r\n        <div>\r\n        <Link to={{pathname:\"/showmessages/\" + this.state.user_id }}>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n             Show Messages\r\n          </Button>\r\n       </Link>\r\n       <br />\r\n        </div>\r\n        <div>\r\n          {this.props.user_posts\r\n            ? this.props.user_posts.map(post =>\r\n              <this.RenderPosts post={post} key={post.pid} /> )\r\n            : null }\r\n        </div>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\"> Confirm Delete? </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                id=\"alert-dialog-description\"\r\n                >\r\n                  Deleteing Post\r\n                </DialogContentText>\r\n                <DialogActions>\r\n                  <Button onClick={() => this.DeltePost() }>\r\n                    Agree\r\n                  </Button>\r\n                  <Button onClick={() => this.handleClickClose()}>\r\n                    Cancel\r\n                  </Button>\r\n              </DialogActions>\r\n            </DialogContent>\r\n        </Dialog>\r\n\r\n      </div>\r\n\r\n\r\n    )}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    profile: state.auth_reducer.profile,\r\n    user_posts: state.posts_reducer.user_posts,\r\n    db_profile: state.auth_reducer.db_profile\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    set_user_posts: (posts) => dispatch(ACTIONS.fetch_user_posts(posts))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React, { Component } from 'react';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass Form1 extends Component {\r\n\r\n  state ={\r\n    value: ''\r\n  }\r\n\r\n  handleChange = (event) => (\r\n    this.setState({value: event.target.value})\r\n  )\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    this.props.input_action_creator(event.target.name.value)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label> Input </label>\r\n          <input id=\"name\" onChange={this.handleChange} type=\"text\" />\r\n          <button type=\"submit\"> Submit </button>\r\n        </form>\r\n        <br />\r\n        <h3>React State:</h3>\r\n        <p>{this.state.value}</p>\r\n        <br />\r\n        <h3>Redux State:</h3>\r\n        <p>{this.props.user_text}</p>\r\n      </div>\r\n    )}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user_text: state.user_reducer.user_text\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    input_action_creator: (text) => dispatch(ACTIONS.user_input(text))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form1);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass RenderList extends Component {\r\n  state = {\r\n      items:\r\n        [\r\n          {id: 1, text: \"text 1\", num: 10, bool: true },\r\n          {id: 2, text: \"text 2\", num: 20, bool: false },\r\n          {id: 3, text: \"text 3\", num: 30, bool: true }\r\n        ]\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      {this.state.items.map(list_item =>\r\n        <div key={list_item.id}>\r\n          <Link to={{pathname:'/listitem/' + list_item.id, state:{list_item} }} style={{marginTop: '25px', padding: '5px'}}>\r\n            List Item {list_item.id}\r\n          </Link>\r\n          <br />\r\n          <br />\r\n        </div>\r\n        )}\r\n      </div>\r\n    )}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(RenderList);\r\n","import React from 'react'\r\n\r\nconst Component1 = props => (\r\n    <div>\r\n    Component 1\r\n    {console.log(props)}\r\n    </div>\r\n);\r\n\r\nexport default Component1;\r\n","import React from 'react'\r\n\r\nconst Callback = props => (\r\n    <div>\r\n      Callback\r\n    </div>\r\n);\r\n\r\nexport default Callback;\r\n","import React from 'react'\r\n\r\nconst PrivateComponent = props => (\r\n    <div>\r\n      Private Component\r\n    </div>\r\n);\r\n\r\nexport default PrivateComponent;\r\n","import React from 'react'\r\n\r\nconst UnauthRedirect = props => (\r\n    <div>\r\n      UnauthRedirect\r\n    </div>\r\n);\r\n\r\nexport default UnauthRedirect;\r\n","import React from 'react'\r\n\r\nconst Home = props => (\r\n    <div>\r\n      Home\r\n    </div>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react'\r\n\r\n\r\nconst RenderListItem = props => (\r\n    <div>\r\n      <h3>{props.location.state.list_item.text}</h3>\r\n      <h4> {props.location.state.list_item.num} </h4>\r\n      <div>{props.location.state.list_item.bool\r\n              ? <p>Boolean is True</p>\r\n              : <p>Boolean is False</p>\r\n            }\r\n      </div>\r\n    </div>\r\n);\r\n\r\n\r\n\r\n\r\nexport default RenderListItem;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst SignUp = (props) => (\r\n  <div className=\"FlexRowMain\">\r\n  <div>\r\n  <h1>Signup and Create an Account</h1>\r\n    <Button color=\"primary\" size=\"large\" variant=\"contained\" onClick={() => props.auth.login()}>\r\n      Signup\r\n    </Button>\r\n  </div>\r\n  </div>\r\n)\r\n\r\nexport default (SignUp);\r\n"," import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport '../App.css'\r\n\r\n\r\n\r\n\r\n\r\nclass Posts extends Component {\r\n  constructor(props) {\r\n      super(props)\r\n\r\n    this.state = {\r\n      posts: [],\r\n      opacity: 0,\r\n      posts_motion: [],\r\n      num_posts: 0,\r\n      page_range: 0,\r\n      activePage: 1,\r\n      posts_per_page: 5,\r\n      posts_slice: [],\r\n      posts_search: [],\r\n      posts_search_motion: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleTransition()\r\n    axios.get('/api/get/allposts')\r\n      .then(res => this.props.set_posts(res.data))\r\n      .then(() => this.add_posts_to_state(this.props.posts))\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  animate_search_posts = () => {\r\n    this.setState({posts_search_motion: [] })\r\n    let i = 1\r\n    this.state.posts_search.map(post => { // eslint-disable-line\r\n      setTimeout(() => { this.setState({posts_search_motion: [...this.state.posts_search_motion, post]}) }, 50 * i );\r\n      i++;\r\n    })\r\n  }\r\n\r\n  add_search_posts_to_state = (posts) => {\r\n    this.setState({posts_search: []});\r\n    this.setState({posts_search: [...posts]});\r\n\r\n    this.animate_search_posts();\r\n  }\r\n\r\n  handleSearch = (event) => {\r\n    const search_query = event.target.value\r\n    axios.get('/api/get/searchpost', {params: {search_query: search_query} })\r\n    .then(res => this.props.search_posts_success(res.data))\r\n    .then(() => this.add_search_posts_to_state(this.props.db_search_posts))\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      })\r\n  }\r\n\r\n  handleTransition = () => {\r\n    setTimeout(() => this.setState({opacity: 1}), 400 )\r\n  }\r\n\r\n  add_posts_to_state = (posts) => {\r\n    this.setState({posts: [...posts]})\r\n    this.setState({num_posts: this.state.posts.length})\r\n    this.setState({page_range: this.state.num_posts/5})\r\n\r\n    this.slice_posts();\r\n    this.animate_posts();\r\n  }\r\n\r\n  slice_posts = () => {\r\n     const indexOfLastPost = this.state.activePage * this.state.posts_per_page\r\n     const indexOfFirstPost = indexOfLastPost - this.state.posts_per_page\r\n\r\n\r\n     this.setState({posts_slice: this.state.posts.slice(indexOfFirstPost, indexOfLastPost) })\r\n   }\r\n\r\n   animate_posts = () => {\r\n      this.setState({posts_motion: [] })\r\n      let i = 1\r\n      this.state.posts_slice.map(post => {  // eslint-disable-line\r\n        setTimeout(() => { this.setState({posts_motion: [...this.state.posts_motion, post]}) }, 400 * i );\r\n        i++;\r\n      })\r\n    }\r\n\r\n  handlePageChange = (pageNumber) => {\r\n    this.setState({activePage: pageNumber});\r\n\r\n    setTimeout(() => { this.slice_posts() }, 50 )\r\n    setTimeout(() => { this.animate_posts() }, 100 )\r\n   }\r\n\r\n  RenderPosts = post => (\r\n    <div className=\"CardStyles\">\r\n    <Card >\r\n      <CardHeader\r\n        title={<Link to={{pathname:'/post/' + post.post.pid, state: {post}}}>\r\n                  {post.post.title}\r\n                </Link> }\r\n        subheader={\r\n            <div className=\"FlexColumn\">\r\n              <div className=\"FlexRow\">\r\n              {  moment(post.post.date_created).format('MMMM Do, YYYY | h:mm a') }\r\n              </div>\r\n              <div className=\"FlexRow\">\r\n                By:\r\n                <Link style={{paddingLeft: '5px', textDecoration: 'none'}} \r\n                      to={{pathname:\"/user/\" + post.post.author, state:{post} }}>\r\n                 { post.post.author }\r\n                 </Link>\r\n               </div>\r\n               <div className=\"FlexRow\">\r\n                <i className=\"material-icons\">thumb_up</i>\r\n                <div className=\"notification-num-allposts\"> {post.post.likes} </div>\r\n              </div>\r\n            </div>\r\n            }\r\n          />\r\n      <br />\r\n      <CardContent>\r\n        <span style={{overflow: 'hidden' }}> {post.post.body} </span>\r\n      </CardContent>\r\n    </Card>\r\n    </div>\r\n  )\r\n\r\n  render(){\r\n    return(\r\n        <div>\r\n        <div style={{opacity: this.state.opacity, transition: 'opacity 2s ease'}}>\r\n        <br />\r\n        { this.props.is_authenticated\r\n          ?  <Link to=\"/addpost\">\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  Add Post\r\n                </Button>\r\n              </Link>\r\n          : <Link to=\"/signup\">\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  Sign Up to Add Post\r\n                </Button>\r\n              </Link>\r\n            }\r\n        </div>\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Search\"\r\n          margin=\"normal\"\r\n          onChange={this.handleSearch}\r\n        />\r\n        <hr />\r\n        <hr />\r\n        <div>\r\n              {this.state.posts_search\r\n                ? this.state.posts_search_motion.map(post =>\r\n                <div>\r\n                  <this.RenderPosts key={post.pid} post={post} />\r\n\r\n                </div>\r\n                 )\r\n                 : null\r\n               }\r\n         </div>\r\n\r\n        <div style={{opacity: this.state.opacity, transition: 'opacity 2s ease'}}>\r\n        <h1>Posts</h1>\r\n          <div>\r\n                {this.state.posts\r\n                  ? this.state.posts_motion.map(post =>\r\n                    <this.RenderPosts key={post.pid} post={post} />\r\n                   )\r\n                   : null\r\n                 }\r\n           </div>\r\n         </div>\r\n         <Pagination\r\n             activePage={this.state.activePage}\r\n             itemsCountPerPage={5}\r\n             totalItemsCount={this.state.num_posts}\r\n             pageRangeDisplayed={this.state.page_range}\r\n             onChange={this.handlePageChange}\r\n            />\r\n        </div>\r\n    )}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    posts: state.posts_reducer.posts,\r\n    is_authenticated: state.auth_reducer.is_authenticated,\r\n    db_search_posts: state.posts_reducer.db_search_posts\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    set_posts: (posts) => dispatch(ACTIONS.fetch_db_posts(posts)),\r\n    search_posts_success: (posts) => dispatch(ACTIONS.fetch_search_posts(posts)),\r\n    remove_search_posts: () => dispatch(ACTIONS.remove_search_posts())\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport history from '../utils/history';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass AddPost extends Component {\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const user_id = this.props.db_profile[0].uid\r\n    const username = this.props.db_profile[0].username\r\n    const data = {title: event.target.title.value,\r\n                  body: event.target.body.value,\r\n                  username: username,\r\n                  uid: user_id}\r\n    axios.post('/api/post/posttodb', data)\r\n      .then(response => console.log(response))\r\n      .catch((err) => console.log(err))\r\n      .then(setTimeout(() => history.replace('/'), 700) )\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <TextField\r\n            id='title'\r\n            label='Title'\r\n            margin='normal'\r\n            />\r\n          <br />\r\n          <TextField\r\n            id='body'\r\n            label='Body'\r\n            multiline\r\n            rowsMax='4'\r\n            margin=\"normal\"\r\n            />\r\n           <br />\r\n           <button type='submit'> Submit </button>\r\n           </form>\r\n        <br />\r\n        <button onClick={() => history.replace('/posts')}> Cancel </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    db_profile: state.auth_reducer.db_profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddPost)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\n\r\nclass ShowPost extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      open: false,\r\n      comment: '',\r\n      cid: '',\r\n      opacity: 0,\r\n      delete_comment_id: 0,\r\n      comments_arr: [],\r\n      comments_motion : [],\r\n      cur_user_id: null,\r\n      likes: this.props.location.state.post.post.likes,\r\n      like_user_ids: this.props.location.state.post.post.like_user_id,\r\n      like_post: true,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('/api/get/allpostcomments', {params:\r\n                      {post_id: this.props.location.state.post.post.pid}} )\r\n      .then(res => this.props.set_comments(res.data))\r\n      .then(() => this.add_comments_to_state(this.props.comments))\r\n      .catch((err) => console.log(err));\r\n    this.setCurUserID();\r\n    this.handleTransition();\r\n  }\r\n\r\n  setCurUserID = () => {\r\n    if(this.props.isAuthenticated) {\r\n      this.setState({cur_user_id: this.props.db_profile[0].uid})\r\n    }\r\n  }\r\n\r\n  handleTransition = () => (\r\n    setTimeout(() => this.setState({opacity: 1}), 400 )\r\n  );\r\n\r\n  add_comments_to_state = (comments) => {\r\n    this.setState({ comments_arr: [...comments]})\r\n    this.animate_comments();\r\n  }\r\n\r\n  animate_comments = () => {\r\n    let i = 1\r\n    this.state.comments_arr.map(comment => {  // eslint-disable-line\r\n      setTimeout(() => { this.setState({comments_motion: [...this.state.comments_motion, comment]}) }, 400 * i );\r\n      i++;\r\n    })\r\n  }\r\n\r\n  handleCommentSubmit = (submitted_comment) => {\r\n    setTimeout(() =>\r\n      this.setState({comments_motion: [submitted_comment, ...this.state.comments_motion]}),\r\n      50\r\n   )};\r\n\r\n   handleCommentUpdate = (comment) => {\r\n     const commentIndex = this.state.comments_motion.findIndex(com => com.cid === comment.cid)\r\n     let newArr = [...this.state.comments_motion]\r\n     newArr[commentIndex] = comment\r\n     this.setState({comments_motion: newArr })\r\n   };\r\n\r\n   handleCommentDelete = (cid) => {\r\n     this.setState({delete_comment_id: cid})\r\n     const newArr = this.state.comments_motion.filter(com => com.cid !== cid)\r\n     setTimeout(() => this.setState({comments_motion: newArr}), 900)\r\n   };\r\n\r\n  RenderComments = (comment) => (\r\n    <div className={this.state.delete_comment_id === comment.comment.cid\r\n                      ? \"FadeOutComment\"\r\n                      : \"CommentStyles\"}>\r\n      <h3> {comment.comment.comment} </h3>\r\n      <small>\r\n        { comment.comment.date_created === 'Just Now'\r\n          ?  <div> {comment.comment.isEdited\r\n                ? <span> Edited </span>\r\n                : <span> Just Now </span> }</div>\r\n          :  comment.comment.date_created\r\n        }\r\n      </small>\r\n      <p> By: { comment.comment.author} </p>\r\n      {comment.cur_user_id === comment.comment.user_id\r\n        ? <Button onClick={() => this.handleClickOpen(comment.comment.cid, comment.comment.comment)}>\r\n            Edit\r\n          </Button>\r\n        : null\r\n      }\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n  handleClickOpen = (cid, comment) => (\r\n    this.setState({ open: true, comment: comment, cid: cid})\r\n  );\r\n\r\n  handleClose = () => (\r\n    this.setState({open: false, comment: '', cid: '' })\r\n  );\r\n\r\n  handleCommentChange = (event) => (\r\n    this.setState({comment: event.target.value})\r\n  );\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    this.setState({comment: ''})\r\n\r\n    const comment = event.target.comment.value\r\n    const user_id = this.props.db_profile[0].uid\r\n    const post_id = this.props.location.state.post.post.pid\r\n    const username = this.props.db_profile[0].username\r\n    const current_time = \"Just Now\"\r\n    const temp_cid = 63426\r\n\r\n    const submitted_comment = {cid: temp_cid,\r\n                               comment: comment,\r\n                               user_id: user_id,\r\n                               author: username,\r\n                               date_created: current_time }\r\n\r\n    const data = {comment: comment,\r\n                  post_id: post_id,\r\n                  user_id: user_id,\r\n                  username: username }\r\n\r\n    axios.post('/api/post/commenttodb', data)\r\n      .then(res => console.log(res))\r\n      .catch((err) => console.log(err))\r\n    window.scroll({top: 0, left: 0, behavior: 'smooth'})\r\n    this.handleCommentSubmit(submitted_comment)\r\n  }\r\n\r\n  handleUpdate = () => {\r\n    const comment = this.state.comment\r\n    const cid = this.state.cid\r\n    const user_id = this.props.db_profile[0].uid\r\n    const post_id = this.props.location.state.post.post.pid\r\n    const username = this.props.db_profile[0].username\r\n    const isEdited = true\r\n    const current_time = \"Just Now\"\r\n\r\n    const edited_comment = {cid: cid,\r\n                            comment: comment,\r\n                            user_id: user_id,\r\n                            author: username,\r\n                            date_created: current_time,\r\n                            isEdited: isEdited }\r\n\r\n    const data = {cid: cid,\r\n                  comment: comment,\r\n                  post_id: post_id,\r\n                  user_id: user_id,\r\n                  username: username }\r\n\r\n    axios.put('/api/put/commenttodb', data)\r\n      .then(res => console.log(res))\r\n      .catch((err) => console.log(err))\r\n    this.handleCommentUpdate(edited_comment);\r\n  }\r\n\r\n  handleDelete = () => {\r\n    const cid = this.state.cid\r\n    axios.delete('/api/delete/comment', {data: {cid: cid}} )\r\n      .then(res => console.log(res))\r\n      .catch((err) => console.log(err))\r\n    this.handleCommentDelete(cid)\r\n  }\r\n\r\n  handleLikes = () => {\r\n      const user_id = this.props.db_profile[0].uid\r\n      const post_id = this.props.location.state.post.post.pid\r\n\r\n      const data = { uid: user_id, post_id: post_id }\r\n      axios.put('/api/put/likes', data)\r\n        .then( !this.state.like_user_ids.includes(user_id) && this.state.like_post ? this.setState({likes: this.state.likes + 1}) : null)\r\n        .then(this.setState({like_post: false}))\r\n        .catch(err => console.log(err))\r\n    };\r\n\r\n\r\n  render() {\r\n    return(\r\n        <div>\r\n          <div>\r\n            <h2>Post</h2>\r\n              <h4>{this.props.location.state.post.post.title}</h4>\r\n              <p>{this.props.location.state.post.post.body}</p>\r\n              <p>{this.props.location.state.post.post.author}</p>\r\n              <a style={{cursor: 'pointer'}} onClick={this.props.isAuthenticated ? () => this.handleLikes() : () => history.replace('/signup')}>\r\n                  <i className=\"material-icons\">thumb_up</i>\r\n                  <small className=\"notification-num-showpost\"> {this.state.likes} </small>\r\n                </a>\r\n          </div>\r\n          <div>\r\n            <h2> Comments:</h2>\r\n            {this.props.comments\r\n              ? this.state.comments_motion.map((comment) =>\r\n                 <this.RenderComments\r\n                    comment={comment}\r\n                    key={comment.cid}\r\n                    cur_user_id={this.props.db_profile[0].uid}\r\n                   />)\r\n                  : null\r\n            }\r\n          </div>\r\n          <div>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <TextField\r\n                id=\"comment\"\r\n                label=\"Comment\"\r\n                margin=\"normal\"\r\n              />\r\n              <br />\r\n              {this.props.isAuthenticated\r\n                ? <Button variant=\"contained\" color=\"primary\" type=\"submit\" >Submit</Button>\r\n                : <Link to=\"/signup\">\r\n                     <Button  variant=\"contained\" color=\"primary\">\r\n                         Signup to Comment\r\n                      </Button>\r\n                   </Link>\r\n               }\r\n            </form>\r\n          </div>\r\n          <div>\r\n            <Dialog\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">Edit Comment</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText\r\n                    id=\"alert-dialog-description\"\r\n                    >\r\n                    <input type=\"text\" value={this.state.comment} onChange={this.handleCommentChange}/>\r\n                    </DialogContentText>\r\n                    <DialogActions>\r\n                      <Button onClick={() => {this.handleUpdate(); this.handleClose()} }>\r\n                         Agree\r\n                      </Button>\r\n                      <Button onClick={() => this.handleClose()}>\r\n                       Cancel\r\n                      </Button>\r\n                      <Button onClick={() => {this.handleDelete(); this.handleClose()} }>\r\n                        Delete\r\n                      </Button>\r\n                  </DialogActions>\r\n                </DialogContent>\r\n            </Dialog>\r\n          </div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    comments: state.posts_reducer.comments,\r\n    db_profile: state.auth_reducer.db_profile,\r\n    isAuthenticated: state.auth_reducer.is_authenticated\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    set_comments: (comments) => dispatch(ACTIONS.fetch_post_comments(comments))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowPost)\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass EditPost extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      title: '',\r\n      body: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      title: this.props.location.state.post.post.title,\r\n      body: this.props.location.state.post.post.body\r\n    })\r\n  }\r\n\r\n  handleTitleChange = (event) => {\r\n    this.setState({ title: event.target.value })\r\n  }\r\n\r\n  handleBodyChange = (event) => {\r\n    this.setState({ body: event.target.value })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const user_id = this.props.db_profile[0].uid\r\n    const username = this.props.db_profile[0].username\r\n    const pid = this.props.location.state.post.post.pid\r\n    const title = event.target.title.value\r\n    const body = event.target.body.value\r\n\r\n    const data = {\r\n                  title: title,\r\n                  body: body,\r\n                  pid: pid,\r\n                  uid: user_id,\r\n                  username: username\r\n                    }\r\n    axios.put(\"/api/put/post\", data)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n      .then(setTimeout(() => history.replace('/profile'), 700 ))\r\n  }\r\n\r\n  render(){\r\n    return(\r\n        <div>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              id='title'\r\n              label='title'\r\n              margin=\"normal\"\r\n              value={this.state.title}\r\n              onChange={this.handleTitleChange}\r\n            />\r\n            <br />\r\n            <TextField\r\n              id='body'\r\n              label='body'\r\n              multiline\r\n              rows=\"4\"\r\n              margin='normal'\r\n              value={this.state.body}\r\n              onChange={this.handleBodyChange}\r\n              />\r\n          <br />\r\n          <button type=\"submit\"> Submit </button>\r\n          </form>\r\n          <br />\r\n          <button onClick={() => history.goBack()}> Cancel </button>\r\n        </div>\r\n    )}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    db_profile: state.auth_reducer.db_profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditPost);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\n\r\n\r\nclass ShowUser extends Component {\r\n\r\n\r\n  componentDidMount() {\r\n    const username = this.props.location.state.post.post.author\r\n    axios.get('/api/get/otheruserprofilefromdb', {params: {username: username}} )\r\n      .then(res =>  this.props.set_profile(res.data))\r\n      .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n     axios.get('/api/get/otheruserposts', {params: {username: username}} )\r\n       .then(res =>  this.props.set_db_posts(res.data))\r\n       .catch(function (error) {\r\n           console.log(error);\r\n         })\r\n      window.scrollTo({top: 0, left: 0})\r\n    }\r\n\r\n\r\n  RenderProfile = (props) => (\r\n  <div>\r\n    <div className=\"FlexRow\">\r\n       <h1>\r\n          {props.profile.username}\r\n       </h1>\r\n       </div>\r\n       <div className=\"FlexRow\">\r\n       <Link to={{pathname:\"/sendmessage/\", state:{props} }}>\r\n           <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              Send Message\r\n           </Button>\r\n        </Link>\r\n      </div>\r\n  </div>\r\n  );\r\n\r\n\r\n  RenderPosts = (post) => (\r\n    <div>\r\n     <Card className=\"CardStyles\">\r\n        <CardHeader\r\n          title={<Link to={{pathname:\"/post/\" + post.post.pid, state: {post} }}>\r\n                { post.post.title }\r\n                </Link>}\r\n          subheader={\r\n                    <div>\r\n                      <div >\r\n                      {  moment(post.post.date_created).format('MMMM Do, YYYY | h:mm a') }\r\n                      </div>\r\n                      <div >{ post.post.author}</div>\r\n                    </div> }\r\n        />\r\n        <CardContent>\r\n            <span style={{ overflow: 'hidden'}}>{ post.post.body } </span>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n\r\n\r\n  render() {\r\n     return (\r\n     <div>\r\n     <div className=\"FlexRow\">\r\n        { this.props.user_profile\r\n          ? <this.RenderProfile profile={this.props.user_profile[0]} />\r\n          : null\r\n         }\r\n     </div>\r\n\r\n    <br />\r\n    <hr className=\"style-two\" />\r\n\r\n     <h3> Latest Activity: </h3>\r\n       <div className=\"FlexColumn\">\r\n       { this.props.user_posts ?\r\n          this.props.user_posts.map(post =>\r\n          <div>\r\n             <this.RenderPosts key={ post.pid } post={post} />\r\n             <br />\r\n          </div>\r\n           )\r\n       : null\r\n       }\r\n       </div>\r\n     </div>\r\n     )}\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n      user_profile: state.user_reducer.OtherUserDBProfile,\r\n      user_posts: state.user_reducer.db_other_user_posts\r\n  }\r\n}\r\n\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    set_db_posts: (posts) => dispatch(ACTIONS.get_other_user_db_posts(posts)),\r\n    set_profile: (profile) => dispatch(ACTIONS.set_other_user_db_profile(profile))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowUser);\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nclass SendMessage extends Component {\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    const message_to_username = this.props.location.state.props.profile.username\r\n    const message_from_username = this.props.db_profile[0].username\r\n    const message_title = event.target.title.value\r\n    const message_body = event.target.body.value\r\n\r\n    const data = {message_sender: message_from_username, message_to: message_to_username, title: message_title, body: message_body }\r\n    axios.post('/api/post/messagetodb', data)\r\n      .then(response => console.log(response))\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .then(setTimeout( function() { history.replace('/') }, 700))\r\n\r\n     }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n      <form onSubmit={this.handleSubmit}>\r\n        <TextField\r\n          id=\"title\"\r\n          label=\"Title\"\r\n          margin=\"normal\"\r\n        />\r\n        <br/>\r\n          <TextField\r\n          id=\"body\"\r\n          multiline\r\n          rows=\"4\"\r\n          margin=\"normal\"\r\n        />\r\n        <br/>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" >Submit</Button>\r\n      </form>\r\n      <br />\r\n       <span>\r\n        <button className=\"CancelButton\" onClick={() => history.replace('/')}> Cancel </button>\r\n       </span>\r\n    </div>\r\n\r\n  )};\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        db_profile: state.auth_reducer.db_profile\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SendMessage);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\nclass ShowMessages extends Component {\r\n  componentDidMount() {\r\n    const username = this.props.db_profile[0].username\r\n    axios.get('/api/get/usermessages', {params: {username: username}})\r\n      .then(res =>  this.props.set_user_messages(res.data))\r\n      .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n   }\r\n\r\n   RenderMessages = (props) => (\r\n   <TableRow>\r\n       <TableCell>\r\n         <p> <strong>From: </strong>  {props.message.message_sender} </p>\r\n         <p> <strong>Title </strong>   { props.message.message_title } </p>\r\n         <p><strong> Message:</strong>  { props.message.message_body } </p>\r\n         <small> { props.message.date_created } </small>\r\n         <br />\r\n         <Link to={{pathname:\"/replytomessage\", state:{props} }}>\r\n             <button>\r\n                Reply\r\n             </button>\r\n          </Link>\r\n         <button onClick={() => this.DeleteMessage(props.message.mid)}> Delete </button>\r\n         <br />\r\n         <br />\r\n         <button onClick={() => history.goBack()}> Cancel </button>\r\n      </TableCell>\r\n     </TableRow>\r\n   )\r\n\r\n  DeleteMessage = (mid) => {\r\n    axios.delete('/api/delete/usermessage', { data: { mid: mid }})\r\n    .then(res => console.log(res))\r\n    .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n     .then(() => setTimeout( function() { history.replace('/') }, 700))\r\n  }\r\n\r\n\r\n render() {\r\n  return (\r\n    <div>\r\n      <div className='FlexRow'>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell> <strong> Messages </strong> </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          { this.props.user_messages\r\n            ? this.props.user_messages.map( message =>\r\n              <this.RenderMessages key={message.mid} message={message} />\r\n            )\r\n            : null\r\n          }\r\n         </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n      db_profile: state.auth_reducer.db_profile,\r\n      user_messages: state.user_reducer.UserMessages\r\n  }\r\n}\r\n\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    set_user_messages: (messages) => dispatch(ACTIONS.set_user_messages(messages))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowMessages);\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nclass ReplytoMessage extends Component {\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    const message_to_username = this.props.location.state.props.message.message_sender\r\n    const message_from_username = this.props.db_profile[0].username\r\n    const message_title = event.target.title.value\r\n    const message_body = event.target.body.value\r\n\r\n    const data = {message_sender: message_from_username, message_to: message_to_username, title: message_title, body: message_body }\r\n    axios.post('/api/post/messagetodb', data)\r\n      .then(response => console.log(response))\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .then(setTimeout( function() { history.replace('/') }, 700))\r\n\r\n     }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n    <h2> Message: </h2>\r\n    <div className='FlexColumn'>\r\n      <div >\r\n        <p><strong>{this.props.location.state.props.message.message_title}</strong></p>\r\n      </div>\r\n      <div >\r\n        <p>{this.props.location.state.props.message.message_body}</p>\r\n      </div>\r\n      <div >\r\n        <small> By: {this.props.location.state.props.message.message_sender}</small>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"FlexRow\">\r\n      <form onSubmit={this.handleSubmit}>\r\n        <TextField\r\n          id=\"title\"\r\n          label=\"Title\"\r\n          margin=\"normal\"\r\n        />\r\n        <br/>\r\n          <TextField\r\n          id=\"body\"\r\n          multiline\r\n          rows=\"4\"\r\n          margin=\"normal\"\r\n        />\r\n        <br/>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" >Submit</Button>\r\n      </form>\r\n        <br />\r\n      </div>\r\n      <div className=\"FlexRow\">\r\n        <button className=\"CancelButton\" onClick={() => history.replace('/')}> Cancel </button>\r\n      </div>\r\n    </div>\r\n  )};\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        db_profile: state.auth_reducer.db_profile\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ReplytoMessage);\r\n","import React, { Component } from 'react';\r\nimport history from './history';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nclass AuthCheck extends Component {\r\n\r\n  send_profile_to_db = (profile) => {\r\n    const data = profile\r\n    axios.post('/api/posts/userprofiletodb', data )\r\n      .then(axios.get('/api/get/userprofilefromdb', {params: {email: profile.profile.email}})\r\n        .then(res => this.props.set_db_profile(res.data)) )\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    if(this.props.auth.isAuthenticated()) {\r\n      this.props.login_success()\r\n      this.props.add_profile(this.props.auth.userProfile)\r\n      this.send_profile_to_db(this.props.auth.userProfile)\r\n      setTimeout(() => history.replace('/'), 50)\r\n    }\r\n    else {\r\n      this.props.login_failure()\r\n      this.props.remove_profile()\r\n      this.props.remove_db_profile()\r\n      history.replace('/')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n        <div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    login_success: () => dispatch(ACTIONS.login_success()),\r\n    login_failure: () => dispatch(ACTIONS.login_failure()),\r\n    add_profile: (profile) => dispatch(ACTIONS.add_profile(profile)),\r\n    remove_profile: () => dispatch(ACTIONS.remove_profile()),\r\n    set_db_profile: (profile) => dispatch(ACTIONS.set_db_profile(profile)),\r\n    remove_db_profile: () => dispatch(ACTIONS.remove_db_profile())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthCheck);\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Container1 from './containers/container1'\r\nimport Header from './containers/header';\r\nimport Profile from './containers/profile';\r\nimport Form1 from './containers/form1';\r\nimport RenderList from './containers/renderlist';\r\n\r\n\r\nimport Component1 from './functional/component1';\r\nimport Callback from './functional/callback';\r\nimport PrivateComponent from './functional/privatecomponent';\r\nimport UnauthRedirect from './functional/unauthredirect';\r\nimport Home from './functional/home';\r\nimport RenderListItem from './functional/renderlistitem';\r\nimport SignUp from './functional/signup';\r\n\r\nimport Posts from './Blog/posts';\r\nimport AddPost from './Blog/addpost';\r\nimport ShowPost from './Blog/showpost';\r\nimport EditPost from './Blog/editpost';\r\n\r\nimport ShowUser from './Profile/showuser';\r\nimport SendMessage from './Profile/sendmessage';\r\nimport ShowMessages from './Profile/showmessages';\r\nimport ReplytoMessage from './Profile/replytomessage';\r\n\r\nimport * as ACTIONS from './store/actions/actions';\r\n\r\nimport Auth from './utils/auth';\r\nimport AuthCheck from './utils/authcheck';\r\nimport history from './utils/history';\r\n\r\nimport { Router, Route, Switch, Redirect } from 'react-router';\r\n\r\n\r\n\r\n\r\nexport const auth = new Auth()\r\n\r\nconst handleAuthentication = (props) => {\r\n  if(props.location.hash) {\r\n    auth.handleAuth()\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({component: Component, auth }) => (\r\n  <Route render={props => auth.isAuthenticated() === true\r\n    ? <Component auth={auth} {...props} />\r\n    : <Redirect to={{pathname:'/redirect'}} />\r\n  }\r\n  />\r\n)\r\n\r\n\r\n\r\nclass Routes extends Component {\r\n  componentDidMount() {\r\n    if(auth.isAuthenticated()) {\r\n      this.props.login_success()\r\n      auth.getProfile()\r\n      setTimeout(() => {this.props.add_profile(auth.userProfile)}, 400)\r\n    }\r\n    else {\r\n      this.props.login_failure()\r\n      this.props.remove_profile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <Router history={history} >\r\n        <div>\r\n          <Header auth={auth} />\r\n          <Switch>\r\n            <Route exact path='/' component={Home} />\r\n            <Route exact path='/form1' component={Form1} />\r\n            <Route exact path='/container1' render={() => <Container1 auth={auth} /> } />\r\n            <Route path='/authcheck' render={() => <AuthCheck auth={auth} /> } />\r\n            <Route path='/redirect' component={UnauthRedirect} />\r\n            <Route path='/renderlist' component={RenderList} />\r\n\r\n            <Route path=\"/user/:name\" component={ ShowUser } />\r\n            <PrivateRoute path=\"/sendmessage\"  auth={auth} component={ SendMessage } />\r\n            <PrivateRoute path=\"/showmessages/:id\"  auth={auth}  component={ ShowMessages } />\r\n            <PrivateRoute path=\"/replytomessage\"  auth={auth}  component={ ReplytoMessage } />\r\n\r\n            <Route path='/posts' component={Posts} />\r\n            <Route path='/post/:pid' component={ShowPost} />\r\n            <Route path='/editpost/:pid' component={EditPost} />\r\n            <Route path='/addpost' component={AddPost} />\r\n            <Route path=\"/signup\" render={(props) => <SignUp auth={auth} {...props} />} />\r\n\r\n            <Route path='/callback' render={(props) => { handleAuthentication(props); return <Callback />}} />\r\n            <Route path=\"/component1\" render={(props) => <Component1 {...props} /> } />\r\n\r\n            <Route path=\"/listitem/:id\" component={RenderListItem} />\r\n\r\n            <PrivateRoute path=\"/privateroute\" auth={auth} component={PrivateComponent} />\r\n            <PrivateRoute path=\"/profile\" auth={auth} component={Profile} />\r\n\r\n          </Switch>\r\n        </div>\r\n        </Router>\r\n      </div>\r\n    )}\r\n}\r\n\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    login_success: () => dispatch(ACTIONS.login_success()),\r\n    login_failure: () => dispatch(ACTIONS.login_failure()),\r\n    add_profile: (profile) => dispatch(ACTIONS.add_profile(profile)),\r\n    remove_profile: () => dispatch(ACTIONS.remove_profile())\r\n  }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Routes);\r\n","import auth0 from 'auth0-js'\r\nimport history from './history';\r\n\r\nexport default class Auth {\r\n  auth0 = new auth0.WebAuth({\r\n    domain: 'webapp1.auth0.com',\r\n    clientID: 'uZxUdMAsiDWeu3OrNpoi4JwJscdF5nAx',\r\n    redirectUri: 'http://localhost:3000/callback',\r\n    responseType: 'token id_token',\r\n    scope: 'openid profile email'\r\n  })\r\n\r\n  userProfile = {}\r\n\r\n  login = () => {\r\n      this.auth0.authorize()\r\n  }\r\n\r\n  handleAuth = () => {\r\n    this.auth0.parseHash((err, authResult) => {\r\n      if(authResult) {\r\n        localStorage.setItem('access_token', authResult.accessToken)\r\n        localStorage.setItem('id_token', authResult.idToken)\r\n\r\n        let expiresAt = JSON.stringify((authResult.expiresIn * 1000 + new Date().getTime()))\r\n        localStorage.setItem('expiresAt', expiresAt)\r\n\r\n        this.getProfile();\r\n        setTimeout(() => { history.replace('/authcheck') }, 2000);\r\n      } else {\r\n        console.log(err)\r\n      }\r\n    })\r\n  }\r\n\r\n  getAccessToken = () => {\r\n    if(localStorage.getItem('access_token')) {\r\n      const accessToken = localStorage.getItem('access_token')\r\n      return accessToken\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n\r\n  getProfile = () => {\r\n    let accessToken = this.getAccessToken()\r\n    if(accessToken) {\r\n      this.auth0.client.userInfo(accessToken, (err, profile) => {\r\n          if(profile) {\r\n            this.userProfile = { profile }\r\n          }\r\n      } )\r\n    }\r\n  }\r\n\r\n\r\n  logout = () => {\r\n    localStorage.removeItem('access_token')\r\n    localStorage.removeItem('id_token')\r\n    localStorage.removeItem('expiresAt')\r\n    setTimeout(() => { history.replace('/authcheck') }, 200);\r\n  }\r\n\r\n  isAuthenticated = () => {\r\n    let expiresAt = JSON.parse(localStorage.getItem('expiresAt'))\r\n    return new Date().getTime() < expiresAt\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\nimport Routes from './routes';\nimport axios from 'axios'\n\n\n// https://jsonplaceholder.typicode.com/posts\nconst axiosInstance = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com'\n})\n\n\nclass App extends Component {\n  state = {\n    hello: null\n  }\n\n  componentDidMount() {\n    // axiosInstance.get('/posts')\n    //     .then(res => console.log(res.data) )\n    //     .catch(err => console.log(err) )\n    this.asyncFunction()\n  }\n\n  asyncFunction = async () => {\n    await fetch('https://jsonplaceholder.typicode.com/posts')\n        .then(res => res.json())\n        .then(json => console.log(json))\n  }\n\n  render() {\n    return(\n      <div>\n        {this.state.hello ? <div> {this.state.hello} </div> : null}\n      React\n      <Routes />\n      </div>\n    )}\n}\n\n\nexport default App;\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nconst initialState = {\r\n  stateprop1: false,\r\n}\r\n\r\nconst Reducer1 = (state = initialState, action) => {\r\n    switch(action.type) {\r\n      case ACTION_TYPES.SUCCESS:\r\n        return {\r\n          ...state,\r\n          stateprop1: true\r\n        }\r\n      case ACTION_TYPES.FAILURE:\r\n        return {\r\n          ...state,\r\n          stateprop1: false\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default Reducer1;\r\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nconst initialState = {\r\n  is_authenticated: false,\r\n  profile: null,\r\n  db_profile: null\r\n}\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n      case ACTION_TYPES.LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          is_authenticated: true\r\n        }\r\n      case ACTION_TYPES.LOGIN_FAILURE:\r\n        return {\r\n          ...state,\r\n          is_authenticated: false\r\n        }\r\n      case ACTION_TYPES.ADD_PROFILE:\r\n        return {\r\n          ...state,\r\n          profile: action.payload\r\n        }\r\n      case ACTION_TYPES.REMOVE_PROFILE:\r\n        return {\r\n          ...state,\r\n          profile: null\r\n        }\r\n      case ACTION_TYPES.SET_DB_PROFILE:\r\n        return {\r\n          ...state,\r\n          db_profile: action.payload\r\n        }\r\n      case ACTION_TYPES.REMOVE_DB_PROFILE:\r\n        return {\r\n          ...state,\r\n          db_profile: null\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default AuthReducer;\r\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\n\r\nconst initialState = {\r\n  user_text: '',\r\n  OtherUserDBProfile: null,\r\n  db_other_user_posts: [],\r\n  UserMessages: []\r\n}\r\n\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n      case ACTION_TYPES.USER_INPUT:\r\n        return {\r\n          ...state,\r\n          user_text: action.payload\r\n        }\r\n      case ACTION_TYPES.SET_OTHER_USER_DB_PROFILE:\r\n            return {\r\n              ...state,\r\n              OtherUserDBProfile: action.payload\r\n            }\r\n      case ACTION_TYPES.REMOVE_OTHER_USER_DB_PROFILE:\r\n        return {\r\n          ...state,\r\n          OtherUserDBProfile: null\r\n        }\r\n      case ACTION_TYPES.FETCH_OTHER_USER_DB_POSTS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          db_other_user_posts: action.payload\r\n        }\r\n      case ACTION_TYPES.REMOVE_OTHER_USER_DB_POSTS:\r\n        return {\r\n          ...state,\r\n          db_other_user_posts: []\r\n        }\r\n      case ACTION_TYPES.SET_USER_MESSAGES:\r\n        return {\r\n          ...state,\r\n          UserMessages: action.payload\r\n        }\r\n      case ACTION_TYPES.REMOVE_USER_MESSAGES:\r\n        return {\r\n          ...state,\r\n          UserMessages: []\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default UserReducer;\r\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  comments: [],\r\n  user_posts: [],\r\n  db_search_posts: []\r\n}\r\n\r\nconst PostsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n      case ACTION_TYPES.FETCH_DB_POSTS:\r\n        return {\r\n          ...state,\r\n          posts: action.payload\r\n        }\r\n      case ACTION_TYPES.REMOVE_DB_POSTS:\r\n        return {\r\n          ...state,\r\n          posts: []\r\n        }\r\n      case ACTION_TYPES.FETCH_POST_COMMENTS:\r\n        return {\r\n          ...state,\r\n          comments: action.payload\r\n        }\r\n      case ACTION_TYPES.REMOVE_POST_COMMENTS:\r\n        return {\r\n          ...state,\r\n          comments: []\r\n        }\r\n      case ACTION_TYPES.FETCH_USER_POSTS:\r\n        return {\r\n          ...state,\r\n          user_posts: action.payload\r\n        }\r\n      case ACTION_TYPES.REMOVE_USER_POSTS:\r\n        return {\r\n          ...state,\r\n          user_posts: []\r\n        }\r\n      case ACTION_TYPES.SEARCH_POSTS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          db_search_posts: action.payload\r\n        }\r\n      case ACTION_TYPES.SEARCH_POSTS_FAILURE:\r\n        return {\r\n          ...state,\r\n          db_search_posts: []\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default PostsReducer;\r\n","import Reducer1 from './reducer1'\r\nimport AuthReducer from './auth_reducer';\r\nimport UserReducer from './user_reducer';\r\nimport PostsReducer from './posts_reducer'\r\nimport { combineReducers } from 'redux';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  reducer1: Reducer1,\r\n  auth_reducer: AuthReducer,\r\n  user_reducer: UserReducer,\r\n  posts_reducer: PostsReducer\r\n})\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware()\n));\n\n\nReactDOM.render(<Provider store={store}>\n                  <App />\n                </Provider>,\n                document.getElementById('root'));\n"],"sourceRoot":""}